# ===========================================
# Docker Compose Template Infrastructure
# ===========================================
# Template d'infrastructure pour clients LaRefonte
# Modifiez les services selon les besoins du projet client

services:
  # ========================================
  # N8N Automation Platform (Standard)
  # ========================================
  n8n:
    image: n8nio/n8n:latest
    restart: always
    ports:
      - "127.0.0.1:5678:5678"
    environment:
      N8N_HOST: ${N8N_HOST:-n8n.example.com}
      WEBHOOK_URL: https://${N8N_HOST:-n8n.example.com}/
      WEBHOOK_TUNNEL_URL: https://${N8N_HOST:-n8n.example.com}/
      VUE_APP_URL_BASE_API: https://${N8N_HOST:-n8n.example.com}/
      N8N_PORT: 5678
      N8N_PROTOCOL: https
      GENERIC_TIMEZONE: Europe/Paris
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: ${N8N_USER:-admin}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_PASSWORD}
      N8N_PUSH_BACKEND: websocket
      N8N_SECURE_COOKIE: "true"
      N8N_RUNNERS_ENABLED: "true"
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: "true"
      N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE: "true"
      N8N_WEBHOOK_TTL: 600
      N8N_EXECUTION_TIMEOUT: 3600
      N8N_EXECUTION_TIMEOUT_MAX: 7200
      EXECUTIONS_TIMEOUT: 3600
      EXECUTIONS_TIMEOUT_MAX: 7200
    env_file:
      - .env
    volumes:
      - n8n_data:/home/node/.n8n

  # ========================================
  # Example Services (à adapter par client)
  # ========================================
  
  # Exemple: Service Backend personnalisé
  # Uncomment and adapt for client projects
  # client-backend:
  #   build:
  #     context: ./services/client-project/backend/
  #     dockerfile: Dockerfile
  #   restart: always
  #   ports:
  #     - "127.0.0.1:3001:3001"
  #   environment:
  #     NODE_ENV: production
  #     DATABASE_URL: ${DATABASE_URL}
  #   env_file:
  #     - .env
  #   volumes:
  #     - client_data:/app/data
  
  # Exemple: Service de scraping (optionnel)
  # scraping-service:
  #   build:
  #     context: ./services/scraping/
  #     dockerfile: Dockerfile
  #   restart: always
  #   ports:
  #     - "127.0.0.1:3000:3000"
  #     - "127.0.0.1:5900:5900"
  #   environment:
  #     NODE_ENV: production
  #     PUPPETEER_EXECUTABLE_PATH: /usr/bin/chromium
  #     PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
  #   env_file:
  #     - .env
  #   volumes:
  #     - scraping_data:/app/data

volumes:
  # N8N Data (standard pour tous les clients)
  n8n_data:
    driver: local
  
  # Exemples de volumes pour services clients
  # client_data:
  #   driver: local
  # scraping_data:
  #   driver: local
